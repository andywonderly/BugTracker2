@model BugTracker2.Models.TicketViewModel

@{
    ViewBag.Title = "Ticket Detail View";
}

<h3>@ViewBag.SystemMessage</h3>

<ul class="navbar">
    <li><a href="#" onclick="openTab('Details')">Details</a></li>
    <li><a href="#" onclick="openTab('History')">History</a></li>

</ul>

<div id="Details" class="tabName">
    <div>
    <h4>Tickets</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            Created date-time
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Created.LocalDateTime)
        </dd>

        <dt>
            Updated date-time
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Updated.LocalDateTime)
        </dd>

        <dt>
            Project name
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ProjectName)
        </dd>

        <dt>
            Ticket type
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketTypeName)
        </dd>

        <dt>
            Ticket priority
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketPriorityName)
        </dd>

        <dt>
           Ticket status
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketStatusName)
        </dd>

        <dt>
            Ticket submitter
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OwnerUserDisplayName)
        </dd>

        <dt>
            Assigned developer
        </dt>

        <dd>        
            @Html.DisplayFor(model => model.AssignedToUserDisplayName)
        </dd>

    </dl>
</div>


@if (ViewBag.ShowForms != false)
{

        using (Html.BeginForm("TicketAttachment", "Tickets", FormMethod.Post, new { enctype = "Multipart/form-data" }))
        {
            <div class="form-group">
                <input type="hidden" name="TicketId" value="@Model.Id" />
                Attachment description:
                <input type="text" name="Description" class="form-control">
                <input name="file" type="file" class="form-control" id="fileUpload" />
            </div>
            <button type="submit" class="btn btn-primary btn-lg" id="submit-button">Upload</button>

        }    
}

<br />
@if(ViewBag.ShowForms != false)
{

    <h3>Add a comment</h3>

    using (Html.BeginForm("TicketComment", "Tickets", FormMethod.Post))
            {

                @Html.AntiForgeryToken()

    <div class="form-group">
        <label>Add a comment</label>
        <input type="hidden" name="TicketId" value="@Model.Id" />

        <input type="text" name="Body" class="form-control">
    </div>
    <button type="submit" class="btn btn-primary btn-lg" id="submit-button">Post comment</button>

}
}

<br />

<h3>Attachments</h3>
@foreach (var item in Model.TicketAttachments)
{    
    <div style="max-width: 512px; background-color: cyan; padding: 5px; margin-bottom: 5px;
                border-radius: 5px; border: 2px solid #484848">
        
        Filename: @*There is a space after "Filename:"....just to be clear*@
        <b>
            <a href="@Url.Content(item.FileUrl)">
                @Html.Raw(item.FileName)
            </a>
        </b>
        <br />
        Description: <b>@Html.Raw(item.Description)</b>
        <br />
        Uploader: <b>@Html.Raw(item.UploaderDisplayName)</b>
        <br />
        When: @Html.Raw(item.Created.LocalDateTime)
        <br />
        <b>
            <a href="@Url.Content(item.FileUrl)">Download File</a>
        </b>
    </div>
}

<h3>Comments</h3>
@foreach (var item in Model.TicketComments)
{

    <div style="max-width: 512px; background-color: lightgrey; padding: 5px; margin-bottom: 5px;
                border-radius: 5px; border: 2px solid #484848">
        At @Html.Raw(item.Created.LocalDateTime), <b>@Html.Raw(item.UserDisplayName)</b> said:
        <br />
        <b>@Html.Raw(item.Body)</b>
        
    </div>

}
    </div>

<div id="History" class="tabName">
    <h3>Ticket History</h3>

    @foreach (var item in Model.TicketHistories)
    {
        <div style="max-width: 512px; background-color: lightgreen; padding: 5px; margin-bottom: 5px;
                border-radius: 5px; border: 2px solid #484848">
            Action:
            <b>
                @Html.Raw(item.Property)
                @if (item.OldValue != null || item.NewValue != null)
                {
                    @Html.Raw(" changed")
                }
            </b>
            <br />
            User: <b>@Html.Raw(item.UserDisplayName)</b>
            <br />
            When: @Html.Raw(item.DateTime.LocalDateTime)
            @if (item.NewValue != null)
            {
                <br />
                @Html.Raw("New value: ");
                <b>
                    @Html.Raw(item.NewValue);
                </b>
            }

            @if (item.OldValue != null)
            {
                <br />
                @Html.Raw("Previous value: ");

                @Html.Raw(item.OldValue);
                @*These are on different lines so you can style OldValue if you please*@
            }
        </div>
    }


    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>
</div>  
