@model BugTracker2.Models.Ticket

@{
    ViewBag.Title = "Details";
}
<h3>@ViewBag.SystemMessage</h3>
<h2>Details</h2>

<div>
    <h4>Tickets</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Created)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Created)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Updated.LocalDateTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Updated.LocalDateTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ProjectId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ProjectId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketTypeId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketTypeId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketPriorityId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketPriorityId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketStatusId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketStatusId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OwnerUserId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OwnerUserId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AssignedToUserId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AssignedToUserId)
        </dd>

    </dl>
</div>

<h3>Attach a file</h3>

@using (Html.BeginForm("TicketAttachment", "Tickets", FormMethod.Post,
                    new { enctype = "Multipart/form-data" }))
{
    <div class="form-group">
        <input type="hidden" name="TicketId" value="@Model.Id" />
        Attachment description:
        <input type="text" name="Description" class="form-control">
        <input name="file" type="file" class="form-control" id="fileUpload" />
    </div>
    <button type="submit" class="btn btn-primary btn-lg" id="submit-button">Upload</button>
}

<br />
@using (Html.BeginForm("TicketComment", "Tickets", FormMethod.Post))
{

    @Html.AntiForgeryToken()

    <div class="form-group">
        <label>Add a comment</label>
        <input type="hidden" name="TicketId" value="@Model.Id" />

        <input type="text" name="Body" class="form-control">
    </div>
    <button type="submit" class="btn btn-primary btn-lg" id="submit-button">Post comment</button>

}

<br />
<h3>Comments</h3>

@foreach (var item in Model.TicketAttachments)
{    
    <div style="max-width: 512px; background-color: cadetblue; padding: 5px; margin-bottom: 5px;
                border-radius: 5px; border: 2px solid #484848">
        Filename: @Html.Raw(item.FileName)
        <br />
        Description: @Html.Raw(item.Description)
        <br />
        Uploader: @Html.Raw(item.UploaderDisplayName)
        <br />
        When: @Html.Raw(item.Created.LocalDateTime)
        <br />
        <a href="@Url.Content(item.FileUrl)">Download File</a>
    </div>
}

@foreach (var item in Model.TicketComments)
{

    <div style="max-width: 512px; background-color: lightgrey; padding: 5px; margin-bottom: 5px;
                border-radius: 5px; border: 2px solid #484848">
        At @Html.Raw(item.Created.LocalDateTime), <b>@Html.Raw(item.UserDisplayName)</b> said:
        <br />
        <b>@Html.Raw(item.Body)</b>
        
    </div>

}

<h3>Ticket History</h3>

@foreach(var item in Model.TicketHistories)
{
    <div style="max-width: 512px; background-color: lightgreen; padding: 5px; margin-bottom: 5px;
                border-radius: 5px; border: 2px solid #484848">
        Action: @Html.Raw(item.Property) 
        @if (item.OldValue != null || item.NewValue != null)
        {
            @Html.Raw(" changed")
        }
        <br />
        User: @Html.Raw(item.UserDisplayName)
        <br />
        When: @Html.Raw(item.DateTime.LocalDateTime)
        @if (item.NewValue != null)
        {
            <br />
            @Html.Raw("New value: " + item.NewValue);
        }

        @if (item.OldValue != null)
        {
            <br />
             @Html.Raw("Previous value: " + item.OldValue);
        }
    </div>
}


<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
